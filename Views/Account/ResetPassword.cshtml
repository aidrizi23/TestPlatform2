@model TestPlatform2.Models.Account.ResetPasswordViewModel

@{
    ViewData["Title"] = "Reset Password";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8">
            <div class="card">
                <div class="card-header text-center">
                    <h3 class="mb-0"><i class="fas fa-lock-open me-2"></i>Reset Your Password</h3>
                </div>
                <div class="card-body p-4">
                    <!-- Introduction -->
                    <div class="text-center mb-4">
                        <p class="text-muted">Enter your new password below</p>
                    </div>
                
                    <!-- Validation Summary -->
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <div asp-validation-summary="ModelOnly" class="mb-0"></div>
                        </div>
                    }
                    
                    <form asp-action="ResetPassword" method="post">
                        <!-- Hidden fields -->
                        <input type="hidden" asp-for="UserId" />
                        <input type="hidden" asp-for="Token" />

                        <!-- Password -->
                        <div class="mb-3">
                            <label asp-for="Password" class="form-label">New Password</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                <input asp-for="Password" class="form-control" placeholder="Create a strong password" autocomplete="new-password" />
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="Password" class="text-danger"></span>
                            <div class="form-text">Password must be at least 6 characters long.</div>
                        </div>

                        <!-- Confirm Password -->
                        <div class="mb-4">
                            <label asp-for="ConfirmPassword" class="form-label">Confirm New Password</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm your new password" autocomplete="new-password" />
                                <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <!-- Password Requirements -->
                        <div class="mb-4 p-3 bg-light rounded">
                            <h6 class="mb-2"><i class="fas fa-shield-alt me-2"></i>Password Requirements:</h6>
                            <ul class="small text-muted mb-0">
                                <li>At least 6 characters long</li>
                                <li>Use a combination of letters, numbers, and symbols</li>
                                <li>Don't use personal information or common words</li>
                                <li>Make it unique from your other passwords</li>
                            </ul>
                        </div>

                        <!-- Submit Button -->
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-check me-2"></i>Reset Password
                            </button>
                        </div>
                    </form>
                </div>
                <div class="card-footer text-center py-3">
                    <p class="mb-0">
                        Remember your password? 
                        <a asp-action="Login" class="fw-bold">Sign In</a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Focus the password field when the page loads
            document.getElementById('Password').focus();
            
            // Password visibility toggle
            function setupPasswordToggle(inputId, buttonId) {
                const toggleButton = document.getElementById(buttonId);
                const passwordInput = document.getElementById(inputId);
                
                if (toggleButton && passwordInput) {
                    toggleButton.addEventListener('click', function() {
                        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                        passwordInput.setAttribute('type', type);
                        
                        // Toggle the eye icon
                        const icon = this.querySelector('i');
                        if (type === 'text') {
                            icon.classList.remove('fa-eye');
                            icon.classList.add('fa-eye-slash');
                        } else {
                            icon.classList.remove('fa-eye-slash');
                            icon.classList.add('fa-eye');
                        }
                    });
                }
            }
            
            // Setup toggles for both password fields
            setupPasswordToggle('Password', 'togglePassword');
            setupPasswordToggle('ConfirmPassword', 'toggleConfirmPassword');
            
            // Password strength indicator
            const passwordInput = document.getElementById('Password');
            if (passwordInput) {
                passwordInput.addEventListener('input', function() {
                    const password = this.value;
                    const strength = calculatePasswordStrength(password);
                    updatePasswordStrengthIndicator(strength);
                });
            }
            
            function calculatePasswordStrength(password) {
                let strength = 0;
                
                if (password.length >= 6) strength += 1;
                if (password.length >= 8) strength += 1;
                if (password.match(/[A-Z]/)) strength += 1;
                if (password.match(/[a-z]/)) strength += 1;
                if (password.match(/[0-9]/)) strength += 1;
                if (password.match(/[^A-Za-z0-9]/)) strength += 1;
                
                return Math.min(strength, 4); // Cap at 4 for display purposes
            }
            
            function updatePasswordStrengthIndicator(strength) {
                // This function can be enhanced to show visual password strength indicators
                const strengthTexts = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
                const strengthColors = ['#dc3545', '#fd7e14', '#ffc107', '#198754', '#198754'];
                
                // You can add visual indicators here if desired
            }
        });
    </script>
    
    <style>
        .card {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            border: none;
        }
        
        .card-header {
            background: linear-gradient(135deg, #198754 0%, #157347 100%);
            color: white;
            border-bottom: none;
        }
    </style>
}