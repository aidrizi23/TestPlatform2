@using Microsoft.AspNetCore.Mvc.TagHelpers
@model TestPlatform2.Data.Questions.CreateMultipleChoiceQuestionViewModel

<style>
    body {
        background-color: var(--primary-bg);
        color: var(--text-primary);
    }

    .container {
        max-width: 800px;
    }

    .card {
        background-color: var(--secondary-bg);
        border: none;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    .form-control, .form-select {
        background-color: var(--primary-bg);
        border-color: rgba(255, 255, 255, 0.1);
        color: var(--text-primary);
    }

    .form-control:focus, .form-select:focus {
        background-color: var(--primary-bg);
        border-color: var(--accent-green);
        box-shadow: 0 0 0 0.2rem rgba(76, 175, 80, 0.25);
        color: var(--text-primary);
    }

    .form-check-input {
        background-color: var(--primary-bg);
        border-color: rgba(255, 255, 255, 0.5);
    }

    .form-check-input:checked {
        background-color: var(--accent-green);
        border-color: var(--accent-green);
    }

    .btn-primary {
        background-color: var(--accent-green);
        border: none;
        color: var(--text-primary);
    }

    .btn-primary:hover {
        background-color: var(--accent-purple);
    }

    .btn-outline-primary {
        color: var(--accent-green);
        border-color: var(--accent-green);
    }

    .btn-outline-primary:hover {
        background-color: var(--accent-green);
        color: var(--text-primary);
    }

    .btn-outline-secondary {
        color: var(--text-secondary);
        border-color: var(--text-secondary);
    }

    .btn-outline-secondary:hover {
        background-color: var(--text-secondary);
        color: var(--primary-bg);
    }

    .btn-danger {
        background-color: #dc3545;
        border: none;
    }

    .text-danger {
        color: #dc3545 !important;
    }

    #optionsContainer {
        background-color: var(--primary-bg);
        border-color: rgba(255, 255, 255, 0.1);
    }

    .option-group {
        background-color: var(--secondary-bg);
        border-radius: 4px;
        padding: 0.5rem;
        margin-bottom: 0.5rem;
    }
</style>

<div class="container mt-4">
    <h2 class="mb-4">Create Multiple Choice Question</h2>

    <form asp-controller="Question" asp-action="CreateMultipleChoice" method="post" id="questionForm">
        <input type="hidden" asp-for="TestId" />

        <div class="card">
            <div class="card-body">
                <div class="mb-3">
                    <label asp-for="Text" class="form-label fw-bold">Question Text</label>
                    <textarea asp-for="Text" class="form-control" rows="3" required></textarea>
                    <span asp-validation-for="Text" class="text-danger"></span>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Points" class="form-label fw-bold">Points</label>
                            <input asp-for="Points" class="form-control" type="number" step="0.5" min="0" required />
                            <span asp-validation-for="Points" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3 pt-4">
                            <div class="form-check form-switch">
                                <input asp-for="AllowMultipleSelections" class="form-check-input" type="checkbox" role="switch" id="AllowMultipleSelections">
                                <label asp-for="AllowMultipleSelections" class="form-check-label fw-bold">Allow Multiple Selections</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label fw-bold mb-3">Answer Options</label>
                    <div id="optionsContainer" class="border rounded p-3">
                        <div id="optionsList">
                            @if (Model.Options.Any())
                            {
                                @for (var i = 0; i < Model.Options.Count; i++)
                                {
                                    <div class="option-group mb-3">
                                        <div class="d-flex gap-2 align-items-center">
                                            <input type="text" name="Options" value="@Model.Options[i]" class="form-control" required />
                                            <div class="form-check form-check-inline">
                                                <input type="checkbox" name="CorrectAnswers" value="@Model.Options[i]"
                                                       @(Model.CorrectAnswers.Contains(Model.Options[i]) ? "checked" : "")
                                                       class="form-check-input correct-answer" />
                                                <label class="form-check-label">Correct</label>
                                            </div>
                                            <button type="button" class="btn btn-danger btn-sm remove-option">×</button>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="option-group mb-3">
                                    <div class="d-flex gap-2 align-items-center">
                                        <input type="text" name="Options" class="form-control" required />
                                        <div class="form-check form-check-inline">
                                            <input type="checkbox" name="CorrectAnswers" class="form-check-input correct-answer" />
                                            <label class="form-check-label">Correct</label>
                                        </div>
                                        <button type="button" class="btn btn-danger btn-sm remove-option">×</button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <button type="button" class="btn btn-outline-primary mt-3" id="addOption">
                    <i class="bi bi-plus-circle"></i> Add Option
                </button>
            </div>
        </div>

        <div class="d-flex gap-2 mt-4">
            <button type="submit" class="btn btn-primary px-4">
                <i class="bi bi-check-circle"></i> Create Question
            </button>
            <a asp-controller="Test" asp-action="Details" asp-route-id="@Model.TestId" class="btn btn-outline-secondary px-4">
                <i class="bi bi-x-circle"></i> Cancel
            </a>
        </div>
    </form>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            const handleMultipleSelection = () => {
                const allowMultiple = $("#AllowMultipleSelections").is(":checked");
                $(".correct-answer").off('change');

                if (!allowMultiple) {
                    $(".correct-answer").on('change', function() {
                        if (this.checked) {
                            $(".correct-answer").not(this).prop('checked', false);
                        }
                    });
                    
                    // Ensure only one is checked initially
                    const $checked = $(".correct-answer:checked");
                    if ($checked.length > 1) {
                        $checked.slice(1).prop('checked', false);
                    }
                }
            };

            // Initial setup
            handleMultipleSelection();
            $("#AllowMultipleSelections").change(handleMultipleSelection);

            // Add new option
            $("#addOption").click(function () {
                const newOption = `
                    <div class="option-group mb-3">
                        <div class="d-flex gap-2 align-items-center">
                            <input type="text" name="Options" class="form-control" required />
                            <div class="form-check form-check-inline">
                                <input type="checkbox" name="CorrectAnswers" class="form-check-input correct-answer" />
                                <label class="form-check-label">Correct</label>
                            </div>
                            <button type="button" class="btn btn-danger btn-sm remove-option">×</button>
                        </div>
                    </div>`;
                $("#optionsList").append(newOption);
                handleMultipleSelection();
            });

            // Remove option
            $(document).on("click", ".remove-option", function () {
                if ($(".option-group").length > 1) {
                    $(this).closest(".option-group").remove();
                } else {
                    alert("You must have at least one option");
                }
            });

            // Form validation
            $("#questionForm").submit(function (e) {
                const options = $("input[name='Options']").map(function() { return $(this).val(); }).get();
                const uniqueOptions = [...new Set(options)];
                
                if (uniqueOptions.length < 2) {
                    alert("Please provide at least 2 distinct options");
                    e.preventDefault();
                    return;
                }

                const correctAnswers = $(".correct-answer:checked");
                if (correctAnswers.length === 0) {
                    alert("Please select at least one correct answer");
                    e.preventDefault();
                    return;
                }

                // Update correct answer values
                correctAnswers.each(function() {
                    $(this).val($(this).closest('.option-group').find('input[name="Options"]').val());
                });
            });
        });
    </script>
}