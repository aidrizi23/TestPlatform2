@using Microsoft.AspNetCore.Mvc.TagHelpers
@model TestPlatform2.Data.Questions.CreateShortAnswerQuestionViewModel

@{
    ViewData["Title"] = "Create Short Answer Question";
}

<style>
    body {
        background-color: var(--primary-bg);
        color: var(--text-primary);
    }

    .container {
        max-width: 800px;
    }

    .card {
        background-color: var(--secondary-bg);
        border: none;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    .form-control, .form-select {
        background-color: var(--primary-bg);
        border-color: rgba(255, 255, 255, 0.1);
        color: var(--text-primary);
    }

    .form-control:focus, .form-select:focus {
        background-color: var(--primary-bg);
        border-color: var(--accent-green);
        box-shadow: 0 0 0 0.2rem rgba(76, 175, 80, 0.25);
        color: var(--text-primary);
    }

    .form-check-input {
        background-color: var(--primary-bg);
        border-color: rgba(255, 255, 255, 0.5);
    }

    .form-check-input:checked {
        background-color: var(--accent-green);
        border-color: var(--accent-green);
    }

    .form-switch .form-check-input {
        width: 2.5em;
        height: 1.25em;
    }

    .btn-primary {
        background-color: var(--accent-green);
        border: none;
        color: var(--text-primary);
    }

    .btn-primary:hover {
        background-color: var(--accent-purple);
    }

    .btn-outline-secondary {
        color: var(--text-secondary);
        border-color: var(--text-secondary);
    }

    .btn-outline-secondary:hover {
        background-color: var(--text-secondary);
        color: var(--primary-bg);
    }

    .text-danger {
        color: #dc3545 !important;
    }

    .breadcrumb-nav {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
        font-size: 0.875rem;
    }

    .breadcrumb-link {
        color: #2563eb;
        text-decoration: none;
        display: flex;
        align-items: center;
        transition: color 0.2s ease;
    }

    .breadcrumb-link:hover {
        color: #1d4ed8;
    }

    .breadcrumb-separator {
        margin: 0 0.5rem;
        color: #6b7280;
    }

    .breadcrumb-current {
        color: #6b7280;
    }

    .page-header {
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 2rem;
        font-weight: 700;
        color: #1f2937;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .page-subtitle {
        color: #6b7280;
        font-size: 1.125rem;
    }

    .form-section-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .input-group-text {
        background-color: var(--secondary-bg);
        border-color: rgba(255, 255, 255, 0.1);
        color: var(--text-secondary);
    }

    .answer-preview {
        background-color: var(--primary-bg);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        padding: 1rem;
        margin-top: 1rem;
    }

    .answer-preview-title {
        font-weight: 600;
        color: #1f2937;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .answer-preview-text {
        background-color: var(--secondary-bg);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 6px;
        padding: 0.75rem;
        font-family: monospace;
        color: var(--accent-green);
        min-height: 50px;
        display: flex;
        align-items: center;
    }

    .case-sensitive-indicator {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 0.75rem;
        background-color: rgba(245, 158, 11, 0.1);
        color: #f59e0b;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        margin-top: 0.5rem;
    }

    .case-insensitive-indicator {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 0.75rem;
        background-color: rgba(16, 185, 129, 0.1);
        color: #10b981;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        margin-top: 0.5rem;
    }

    .form-actions {
        display: flex;
        gap: 0.75rem;
        justify-content: flex-end;
        margin-top: 2rem;
        padding-top: 1.5rem;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
    }

    .switch-container {
        background-color: var(--primary-bg);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        padding: 1rem;
    }

    @@media (max-width: 768px) {
        .container {
            padding: 0 1rem;
        }
        
        .page-title {
            font-size: 1.5rem;
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
        
        .form-actions {
            flex-direction: column;
        }
    }
</style>

<div class="container mt-4">
    <!-- Breadcrumb Navigation -->
    <div class="breadcrumb-nav">
        <a asp-controller="Test" asp-action="Details" asp-route-id="@Model.TestId" class="breadcrumb-link">
            <i class="fas fa-arrow-left me-2"></i>Back to Test
        </a>
        <span class="breadcrumb-separator">/</span>
        <span class="breadcrumb-current">Create Short Answer Question</span>
    </div>

    <!-- Page Header -->
    <div class="page-header">
        <h1 class="page-title">
            <i class="fas fa-pen text-info"></i>
            Create Short Answer Question
        </h1>
        <p class="page-subtitle">Create a text-based question that requires a specific written response</p>
    </div>

    <form asp-action="CreateShortAnswer" method="post" id="questionForm">
        @Html.AntiForgeryToken()
        
        <input type="hidden" asp-for="TestId" />

        <!-- Question Details Card -->
        <div class="card">
            <div class="card-body">
                <h3 class="form-section-title">
                    <i class="fas fa-edit"></i>
                    Question Details
                </h3>
                
                <div class="mb-4">
                    <label asp-for="Text" class="form-label fw-bold">Question Text</label>
                    <textarea asp-for="Text" class="form-control" rows="4" 
                              placeholder="Enter your question here..." required 
                              oninput="updatePreview()"></textarea>
                    <span asp-validation-for="Text" class="text-danger"></span>
                    <div class="form-text">Write a clear question that requires a specific written answer</div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Points" class="form-label fw-bold">Points</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-star"></i>
                                </span>
                                <input asp-for="Points" class="form-control" type="number" 
                                       step="0.5" min="0" max="100" required />
                            </div>
                            <span asp-validation-for="Points" class="text-danger"></span>
                            <div class="form-text">Points awarded for correct answer</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label fw-bold">Question Type</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-pen"></i>
                                </span>
                                <input type="text" class="form-control" value="Short Answer" readonly />
                            </div>
                            <div class="form-text">Text-based response question type</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Expected Answer Card -->
        <div class="card">
            <div class="card-body">
                <h3 class="form-section-title">
                    <i class="fas fa-bullseye"></i>
                    Expected Answer
                </h3>
                
                <div class="mb-4">
                    <label asp-for="ExpectedAnswer" class="form-label fw-bold">Correct Answer</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fas fa-check-circle"></i>
                        </span>
                        <input asp-for="ExpectedAnswer" class="form-control" 
                               placeholder="Enter the expected answer..." required 
                               oninput="updatePreview()" />
                    </div>
                    <span asp-validation-for="ExpectedAnswer" class="text-danger"></span>
                    <div class="form-text">The exact answer students need to provide to get full points</div>
                </div>

                <div class="switch-container">
                    <div class="form-check form-switch">
                        <input asp-for="CaseSensitive" class="form-check-input" type="checkbox" 
                               role="switch" id="CaseSensitive" onchange="updatePreview()">
                        <label asp-for="CaseSensitive" class="form-check-label fw-bold">
                            <i class="fas fa-font me-2"></i>Case Sensitive Matching
                        </label>
                    </div>
                    <span asp-validation-for="CaseSensitive" class="text-danger"></span>
                    <div class="form-text mt-2">
                        When enabled, answers must match the exact capitalization (e.g., "Paris" ≠ "paris")
                    </div>
                </div>

                <!-- Answer Preview -->
                <div class="answer-preview">
                    <div class="answer-preview-title">
                        <i class="fas fa-eye"></i>
                        Answer Preview
                    </div>
                    <div class="answer-preview-text" id="answerPreview">
                        Enter expected answer above to see preview...
                    </div>
                    <div id="caseSensitiveIndicator">
                        <span class="case-insensitive-indicator">
                            <i class="fas fa-info-circle"></i>
                            Case insensitive matching
                        </span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Form Actions -->
        <div class="form-actions">
            <a asp-controller="Test" asp-action="Details" asp-route-id="@Model.TestId" 
               class="btn btn-outline-secondary px-4">
                <i class="fas fa-times me-2"></i>Cancel
            </a>
            <button type="submit" class="btn btn-primary px-4">
                <i class="fas fa-check-circle me-2"></i>Create Question
            </button>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function updatePreview() {
            const expectedAnswer = document.getElementById('ExpectedAnswer').value;
            const caseSensitive = document.getElementById('CaseSensitive').checked;
            const preview = document.getElementById('answerPreview');
            const indicator = document.getElementById('caseSensitiveIndicator');
            
            // Update preview text
            if (expectedAnswer.trim()) {
                preview.textContent = expectedAnswer;
                preview.style.color = 'var(--accent-green)';
            } else {
                preview.textContent = 'Enter expected answer above to see preview...';
                preview.style.color = 'var(--text-secondary)';
            }
            
            // Update case sensitivity indicator
            if (caseSensitive) {
                indicator.innerHTML = `
                    <span class="case-sensitive-indicator">
                        <i class="fas fa-exclamation-triangle"></i>
                        Case sensitive matching - "Answer" ≠ "answer"
                    </span>
                `;
            } else {
                indicator.innerHTML = `
                    <span class="case-insensitive-indicator">
                        <i class="fas fa-info-circle"></i>
                        Case insensitive matching - "Answer" = "answer"
                    </span>
                `;
            }
        }
        
        // Initialize preview on page load
        document.addEventListener('DOMContentLoaded', function() {
            updatePreview();
            
            // Focus the question text field
            document.getElementById('Text').focus();
        });
        
        // Form validation
        document.getElementById('questionForm').addEventListener('submit', function(e) {
            const questionText = document.getElementById('Text').value.trim();
            const expectedAnswer = document.getElementById('ExpectedAnswer').value.trim();
            
            if (!questionText) {
                alert('Please enter a question text.');
                e.preventDefault();
                return;
            }
            
            if (!expectedAnswer) {
                alert('Please enter the expected answer.');
                e.preventDefault();
                return;
            }
            
            if (expectedAnswer.length > 200) {
                alert('Expected answer is too long. Please keep it under 200 characters.');
                e.preventDefault();
                return;
            }
        });
    </script>
}