@model TestPlatform2.Models.StartTestViewModel

@{
ViewData["Title"] = "Start Test";
}

<style>
    /* Professional University Start Test Styles */
    body {
        background-color: var(--secondary-bg);
        min-height: 100vh;
        margin: 0;
        padding: 0;
    }

    .start-test-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem 1rem;
        min-height: calc(100vh - 140px);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .main-card {
        background-color: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: var(--radius-lg);
        box-shadow: var(--shadow-md);
        width: 100%;
        max-width: 700px;
        overflow: hidden;
        animation: slideInUp 0.6s ease-out;
        position: relative;
    }

    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Header Section */
    .test-header {
        background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary));
        color: white;
        padding: 3rem 2rem;
        text-align: center;
        position: relative;
    }

    .test-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
        opacity: 0.3;
        pointer-events: none;
    }

    .header-icon {
        width: 80px;
        height: 80px;
        margin: 0 auto 1.5rem;
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px);
        border-radius: var(--radius-lg);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 2.5rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
        animation: headerIconPulse 3s ease-in-out infinite;
        position: relative;
        z-index: 1;
    }

    @@keyframes headerIconPulse {
        0%, 100% {
            transform: scale(1);
            box-shadow: 0 4px 20px rgba(255, 255, 255, 0.2);
        }
        50% {
            transform: scale(1.05);
            box-shadow: 0 8px 30px rgba(255, 255, 255, 0.3);
        }
    }

    .test-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        position: relative;
        z-index: 1;
    }

    .test-subtitle {
        font-size: 1.25rem;
        opacity: 0.9;
        margin-bottom: 0.5rem;
        font-weight: 500;
        position: relative;
        z-index: 1;
    }

    .test-description {
        font-size: 1rem;
        opacity: 0.8;
        margin: 0;
        line-height: 1.5;
        position: relative;
        z-index: 1;
    }

    /* Information Section */
    .info-section {
        background-color: #f8f9fa;
        border-bottom: 1px solid var(--border-color);
        padding: 2rem;
    }

    .info-grid {
        display: grid;
        grid-template-columns: auto 1fr;
        gap: 1rem;
        align-items: flex-start;
    }

    .info-icon {
        width: 48px;
        height: 48px;
        background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary));
        border-radius: var(--radius-md);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.25rem;
        box-shadow: 0 4px 12px rgba(37, 99, 235, 0.2);
    }

    .info-content h3 {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0 0 0.75rem 0;
    }

    .info-content p {
        color: var(--text-secondary);
        margin: 0;
        line-height: 1.6;
    }

    /* Form Section */
    .form-section {
        padding: 2.5rem 2rem;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .form-group {
        margin-bottom: 0;
    }

    .form-label {
        display: block;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.5rem;
        font-size: 0.875rem;
    }

    .form-input {
        width: 100%;
        padding: 0.875rem 1rem;
        border: 2px solid var(--border-color);
        border-radius: var(--radius-md);
        font-size: 1rem;
        color: var(--text-primary);
        background-color: #ffffff;
        transition: all var(--transition-normal);
        box-sizing: border-box;
    }

    .form-input:focus {
        outline: none;
        border-color: var(--accent-primary);
        box-shadow: 0 0 0 0.2rem rgba(37, 99, 235, 0.15);
        background-color: #ffffff;
    }

    .form-input::placeholder {
        color: var(--text-muted);
    }

    .form-input.error {
        border-color: var(--danger);
        box-shadow: 0 0 0 0.2rem rgba(220, 38, 38, 0.15);
    }

    .error-message {
        color: var(--danger);
        font-size: 0.875rem;
        margin-top: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .error-message::before {
        content: 'âš ';
        font-size: 1rem;
    }

    /* Action Section */
    .action-section {
        padding: 0 2rem 2.5rem;
        text-align: center;
    }

    .start-button {
        background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary));
        color: white;
        border: none;
        padding: 1rem 3rem;
        border-radius: var(--radius-md);
        font-size: 1.125rem;
        font-weight: 600;
        cursor: pointer;
        transition: all var(--transition-normal);
        box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3);
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        text-decoration: none;
        min-width: 200px;
        justify-content: center;
    }

    .start-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(37, 99, 235, 0.4);
        color: white;
        text-decoration: none;
    }

    .start-button:active {
        transform: translateY(0);
    }

    .start-button:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
    }

    .button-icon {
        font-size: 1.25rem;
    }

    /* Requirements Section */
    .requirements-section {
        background-color: #f8f9fa;
        border-top: 1px solid var(--border-color);
        padding: 2rem;
    }

    .requirements-header {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 1.5rem;
    }

    .requirements-icon {
        width: 40px;
        height: 40px;
        background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary));
        border-radius: var(--radius-md);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1rem;
    }

    .requirements-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0;
    }

    .requirements-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1rem;
    }

    .requirement-item {
        display: flex;
        align-items: flex-start;
        gap: 0.75rem;
        padding: 0.75rem;
        background: white;
        border-radius: var(--radius-md);
        border: 1px solid var(--border-color);
        transition: all var(--transition-fast);
    }

    .requirement-item:hover {
        transform: translateY(-1px);
        box-shadow: var(--shadow-sm);
    }

    .requirement-check {
        width: 20px;
        height: 20px;
        background: var(--success);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 0.75rem;
        flex-shrink: 0;
        margin-top: 0.125rem;
    }

    .requirement-text {
        color: var(--text-secondary);
        font-size: 0.9rem;
        line-height: 1.4;
        font-weight: 500;
    }

    /* Loading Overlay */
    .loading-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(5px);
        display: none;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        gap: 1.5rem;
        z-index: 10;
        border-radius: var(--radius-lg);
    }

    .loading-spinner {
        width: 48px;
        height: 48px;
        border: 4px solid var(--border-color);
        border-top: 4px solid var(--accent-primary);
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .loading-text {
        color: var(--text-primary);
        font-weight: 600;
        font-size: 1.1rem;
    }

    .success-checkmark {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: var(--success);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
        animation: successPulse 0.6s ease-out;
        box-shadow: 0 4px 20px rgba(22, 163, 74, 0.3);
    }

    @@keyframes successPulse {
        0% {
            opacity: 0;
            transform: scale(0.5);
        }
        50% {
            opacity: 1;
            transform: scale(1.1);
        }
        100% {
            opacity: 1;
            transform: scale(1);
        }
    }

    /* Professional Progress Indicator */
    .progress-indicator {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        margin-bottom: 1.5rem;
    }

    .progress-step {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: var(--border-color);
        transition: all var(--transition-normal);
    }

    .progress-step.active {
        background: var(--accent-primary);
        transform: scale(1.2);
    }

    .progress-step.completed {
        background: var(--success);
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
    .start-test-container {
        padding: 1rem;
    }

    .test-header {
        padding: 2rem 1.5rem;
    }

    .test-title {
        font-size: 2rem;
    }

    .header-icon {
        width: 64px;
        height: 64px;
        font-size: 2rem;
    }

    .form-section,
    .info-section,
    .requirements-section {
        padding: 1.5rem;
    }

    .form-row {
        grid-template-columns: 1fr;
        gap: 1rem;
    }

    .requirements-grid {
        grid-template-columns: 1fr;
    }

    .start-button {
        width: 100%;
        padding: 1rem 2rem;
    }
    }

    @@media (max-width: 480px) {
    .test-header {
        padding: 1.5rem 1rem;
    }

    .test-title {
        font-size: 1.75rem;
    }

    .header-icon {
        width: 56px;
        height: 56px;
        font-size: 1.75rem;
    }

    .form-input {
        padding: 0.75rem;
    }

    .info-grid {
        grid-template-columns: 1fr;
        text-align: center;
    }
    }
</style>

<div class="start-test-container">
    <div class="main-card">
        <!-- Loading Overlay -->
        <div class="loading-overlay" id="loadingOverlay">
            <div class="loading-spinner"></div>
            <div class="loading-text">Starting your test...</div>
        </div>

        <!-- Header Section -->
        <div class="test-header">
            <div class="header-icon">
                <i class="fas fa-clipboard-check"></i>
            </div>
            <h1 class="test-title">Assessment Portal</h1>
            <p class="test-subtitle">University Testing System</p>
            <p class="test-description">Please provide your information to begin the assessment</p>
        </div>

        <!-- Information Section -->
        <div class="info-section">
            <div class="info-grid">
                <div class="info-icon">
                    <i class="fas fa-info-circle"></i>
                </div>
                <div class="info-content">
                    <h3>Before You Begin</h3>
                    <p>This assessment is monitored and timed. Ensure you have a stable internet connection and are in a quiet environment. Once started, avoid leaving this page to prevent automatic deduction of attempts.</p>
                </div>
            </div>
        </div>

        <!-- Progress Indicator -->
        <div class="form-section">
            <div class="progress-indicator">
                <div class="progress-step active"></div>
                <div class="progress-step"></div>
                <div class="progress-step"></div>
            </div>

            <!-- Form Section -->
            <form asp-action="StartTest" method="post" id="startTestForm" novalidate>
                <input type="hidden" asp-for="TestId" />
                <input type="hidden" asp-for="Token" />

                <div class="form-row">
                    <div class="form-group">
                        <label asp-for="FirstName" class="form-label">First Name</label>
                        <input asp-for="FirstName"
                               class="form-input"
                               placeholder="Enter your first name"
                               autocomplete="given-name"
                               required />
                        <span asp-validation-for="FirstName" class="error-message"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="LastName" class="form-label">Last Name</label>
                        <input asp-for="LastName"
                               class="form-input"
                               placeholder="Enter your last name"
                               autocomplete="family-name"
                               required />
                        <span asp-validation-for="LastName" class="error-message"></span>
                    </div>
                </div>
            </form>

            <!-- Action Section -->
            <div class="action-section">
                <button type="submit" form="startTestForm" class="start-button" id="startButton">
                    <span class="button-icon">
                        <i class="fas fa-play"></i>
                    </span>
                    <span>Begin Assessment</span>
                </button>
            </div>
        </div>

        <!-- Requirements Section -->
        <div class="requirements-section">
            <div class="requirements-header">
                <div class="requirements-icon">
                    <i class="fas fa-shield-check"></i>
                </div>
                <h4 class="requirements-title">Assessment Requirements</h4>
            </div>

            <div class="requirements-grid">
                <div class="requirement-item">
                    <div class="requirement-check">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="requirement-text">Stable internet connection required</div>
                </div>

                <div class="requirement-item">
                    <div class="requirement-check">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="requirement-text">Do not refresh or close the browser</div>
                </div>

                <div class="requirement-item">
                    <div class="requirement-check">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="requirement-text">Complete in one continuous session</div>
                </div>

                <div class="requirement-item">
                    <div class="requirement-check">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="requirement-text">Ensure device is fully charged</div>
                </div>

                <div class="requirement-item">
                    <div class="requirement-check">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="requirement-text">Find a quiet, distraction-free space</div>
                </div>

                <div class="requirement-item">
                    <div class="requirement-check">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="requirement-text">Close all unnecessary applications</div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('startTestForm');
        const startButton = document.getElementById('startButton');
        const loadingOverlay = document.getElementById('loadingOverlay');
        const inputs = form.querySelectorAll('.form-input');
        const progressSteps = document.querySelectorAll('.progress-step');

        // Form validation
        inputs.forEach(input => {
            input.addEventListener('blur', validateInput);
            input.addEventListener('input', function() {
                if (this.classList.contains('error')) {
                    validateInput.call(this);
                }
                updateProgress();
            });
        });

        function validateInput() {
            const value = this.value.trim();
            const errorElement = this.parentElement.querySelector('.error-message');

            if (!value) {
                this.classList.add('error');
                if (errorElement) {
                    errorElement.textContent = `${this.previousElementSibling.textContent} is required`;
                    errorElement.style.display = 'flex';
                }
                return false;
            } else if (value.length < 2) {
                this.classList.add('error');
                if (errorElement) {
                    errorElement.textContent = `${this.previousElementSibling.textContent} must be at least 2 characters`;
                    errorElement.style.display = 'flex';
                }
                return false;
            } else {
                this.classList.remove('error');
                if (errorElement) {
                    errorElement.style.display = 'none';
                }
                return true;
            }
        }

        function updateProgress() {
            const validInputs = Array.from(inputs).filter(input => input.value.trim().length >= 2);
            const progress = validInputs.length;

            progressSteps.forEach((step, index) => {
                step.classList.remove('active', 'completed');
                if (index < progress) {
                    step.classList.add('completed');
                } else if (index === progress) {
                    step.classList.add('active');
                }
            });

            // Update button state
            if (progress === inputs.length) {
                startButton.style.background = 'linear-gradient(135deg, var(--success), #16a34a)';
            } else {
                startButton.style.background = 'linear-gradient(135deg, var(--accent-primary), var(--accent-secondary))';
            }
        }

        // Form submission
        form.addEventListener('submit', function(e) {
            e.preventDefault();

            let isValid = true;
            inputs.forEach(input => {
                if (!validateInput.call(input)) {
                    isValid = false;
                }
            });

            if (!isValid) {
                // Show validation error feedback
                startButton.style.background = 'linear-gradient(135deg, var(--danger), #dc2626)';
                startButton.innerHTML = '<i class="fas fa-exclamation-triangle me-2"></i>Please complete all fields';

                setTimeout(() => {
                    startButton.style.background = 'linear-gradient(135deg, var(--accent-primary), var(--accent-secondary))';
                    startButton.innerHTML = '<span class="button-icon"><i class="fas fa-play"></i></span><span>Begin Assessment</span>';
                }, 2000);
                return;
            }

            // Show loading state
            startButton.disabled = true;
            startButton.style.background = 'linear-gradient(135deg, #4c51bf, #553c9a)';
            startButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Preparing Assessment...';
            loadingOverlay.style.display = 'flex';

            // Progressive loading steps
            setTimeout(() => {
                const loadingText = loadingOverlay.querySelector('.loading-text');
                loadingText.textContent = 'Validating credentials...';

                setTimeout(() => {
                    loadingText.textContent = 'Setting up secure environment...';

                    setTimeout(() => {
                        // Success state
                        const successIcon = document.createElement('div');
                        successIcon.className = 'success-checkmark';
                        successIcon.innerHTML = '<i class="fas fa-check"></i>';

                        const spinner = loadingOverlay.querySelector('.loading-spinner');
                        spinner.style.opacity = '0';

                        setTimeout(() => {
                            loadingOverlay.removeChild(spinner);
                            loadingOverlay.insertBefore(successIcon, loadingOverlay.firstChild);

                            loadingText.textContent = 'Redirecting to assessment...';
                            loadingText.style.color = 'var(--success)';

                            // Submit form
                            setTimeout(() => {
                                this.submit();
                            }, 800);
                        }, 300);
                    }, 1000);
                }, 800);
            }, 1000);
        });

        // Keyboard navigation
        inputs.forEach((input, index) => {
            input.addEventListener('keydown', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    if (index < inputs.length - 1) {
                        inputs[index + 1].focus();
                    } else {
                        startButton.click();
                    }
                }
            });
        });

        // Auto-focus first input
        setTimeout(() => {
            inputs[0].focus();
        }, 600);

        // Initialize progress
        updateProgress();

        // Error handling
        window.addEventListener('error', function(e) {
            if (loadingOverlay.style.display === 'flex') {
                const loadingText = loadingOverlay.querySelector('.loading-text');
                loadingText.textContent = 'An error occurred. Please try again.';
                loadingText.style.color = 'var(--danger)';

                setTimeout(() => {
                    loadingOverlay.style.display = 'none';
                    startButton.disabled = false;
                    startButton.style.background = 'linear-gradient(135deg, var(--accent-primary), var(--accent-secondary))';
                    startButton.innerHTML = '<span class="button-icon"><i class="fas fa-play"></i></span><span>Begin Assessment</span>';
                }, 2000);
            }
        });
    });
</script>

@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}