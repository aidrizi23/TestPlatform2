@model TestPlatform2.Models.TestDeniedViewModel

@{
    ViewData["Title"] = Model.Title;
}

<style>
    body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        font-family: 'Inter', sans-serif;
    }

    .denial-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem 1rem;
    }

    .denial-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        max-width: 600px;
        width: 100%;
        overflow: hidden;
        animation: slideUp 0.6s ease-out;
    }

    @@keyframes slideUp {
        from {
            transform: translateY(30px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .denial-header {
        padding: 3rem 2rem 2rem;
        text-align: center;
        position: relative;
    }

    .denial-icon {
        width: 80px;
        height: 80px;
        margin: 0 auto 1.5rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2.5rem;
        color: white;
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }

    .icon-error {
        background: linear-gradient(135deg, #ff6b6b, #ee5a52);
    }

    .icon-warning {
        background: linear-gradient(135deg, #ffa726, #ff9800);
    }

    .icon-info {
        background: linear-gradient(135deg, #42a5f5, #2196f3);
    }

    .icon-locked {
        background: linear-gradient(135deg, #ab47bc, #9c27b0);
    }

    .denial-title {
        font-size: 2rem;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 0.5rem;
        line-height: 1.2;
    }

    .denial-message {
        font-size: 1.125rem;
        color: #718096;
        line-height: 1.6;
        margin-bottom: 0;
    }

    .denial-body {
        padding: 0 2rem 2rem;
    }

    .denial-details {
        background: #f7fafc;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .detail-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 0;
        border-bottom: 1px solid #e2e8f0;
    }

    .detail-row:last-child {
        border-bottom: none;
    }

    .detail-label {
        font-weight: 600;
        color: #4a5568;
    }

    .detail-value {
        color: #2d3748;
        font-weight: 500;
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 600;
    }

    .status-error {
        background: rgba(255, 107, 107, 0.1);
        color: #e53e3e;
    }

    .status-warning {
        background: rgba(255, 167, 38, 0.1);
        color: #dd6b20;
    }

    .status-info {
        background: rgba(66, 165, 245, 0.1);
        color: #3182ce;
    }

    .denial-actions {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .btn {
        padding: 0.875rem 2rem;
        border-radius: 10px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        color: white;
        text-decoration: none;
    }

    .btn-secondary {
        background: #f7fafc;
        color: #4a5568;
        border: 2px solid #e2e8f0;
    }

    .btn-secondary:hover {
        background: #edf2f7;
        border-color: #cbd5e0;
        color: #2d3748;
        text-decoration: none;
    }

    .denial-footer {
        background: #f7fafc;
        padding: 1.5rem 2rem;
        text-align: center;
        border-top: 1px solid #e2e8f0;
    }

    .footer-text {
        color: #718096;
        font-size: 0.875rem;
        margin: 0;
    }

    .support-link {
        color: #667eea;
        font-weight: 600;
        text-decoration: none;
    }

    .support-link:hover {
        color: #5a67d8;
        text-decoration: underline;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .denial-container {
            padding: 1rem;
        }

        .denial-header {
            padding: 2rem 1.5rem 1.5rem;
        }

        .denial-body {
            padding: 0 1.5rem 1.5rem;
        }

        .denial-footer {
            padding: 1rem 1.5rem;
        }

        .denial-title {
            font-size: 1.5rem;
        }

        .denial-message {
            font-size: 1rem;
        }

        .denial-icon {
            width: 60px;
            height: 60px;
            font-size: 2rem;
        }

        .detail-row {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.25rem;
        }
    }

    /* Animation for better user experience */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .denial-card {
        animation: fadeInUp 0.6s ease-out;
    }

    /* Enhanced button hover effects */
    .denial-actions .btn {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        font-size: 0.95rem;
        letter-spacing: 0.025em;
    }

    .denial-actions .btn:hover {
        transform: translateY(-1px);
    }

    /* Icon animations */
    .denial-icon {
        transition: transform 0.3s ease;
    }

    .denial-icon:hover {
        transform: scale(1.05);
    }

    /* Status badge enhancements */
    .status-badge {
        transition: all 0.2s ease;
    }

    .status-badge:hover {
        transform: scale(1.02);
    }

    /* Additional responsive improvements */
    @@media (max-width: 480px) {
        .denial-title {
            font-size: 1.375rem;
        }
        
        .denial-icon {
            width: 50px;
            height: 50px;
            font-size: 1.5rem;
        }
        
        .btn {
            padding: 0.75rem 1.5rem;
            font-size: 0.9rem;
        }
    }
</style>

<div class="denial-container">
    <div class="denial-card">
        <!-- Header -->
        <div class="denial-header">
            <div class="denial-icon @Model.IconClass">
                @switch (Model.Reason)
                {
                    case TestPlatform2.Models.TestDenialReason.TestTakenBefore:
                    case TestPlatform2.Models.TestDenialReason.MaxAttemptsExceeded:
                    case TestPlatform2.Models.TestDenialReason.InviteAlreadyUsed:
                        <i class="fas fa-check-circle"></i>
                        break;
                    case TestPlatform2.Models.TestDenialReason.TestLocked:
                        <i class="fas fa-lock"></i>
                        break;
                    case TestPlatform2.Models.TestDenialReason.InvalidToken:
                    case TestPlatform2.Models.TestDenialReason.UnauthorizedAccess:
                        <i class="fas fa-ban"></i>
                        break;
                    case TestPlatform2.Models.TestDenialReason.TestNotFound:
                        <i class="fas fa-search"></i>
                        break;
                    case TestPlatform2.Models.TestDenialReason.NoQuestionsAvailable:
                        <i class="fas fa-question-circle"></i>
                        break;
                    case TestPlatform2.Models.TestDenialReason.TestExpired:
                        <i class="fas fa-clock"></i>
                        break;
                    default:
                        <i class="fas fa-exclamation-triangle"></i>
                        break;
                }
            </div>
            <h1 class="denial-title">@Model.Title</h1>
            <p class="denial-message">@Model.Message</p>
        </div>

        <!-- Body -->
        <div class="denial-body">
            @if (!string.IsNullOrEmpty(Model.TestName) || Model.AdditionalInfo.Any())
            {
                <div class="denial-details">
                    @if (!string.IsNullOrEmpty(Model.TestName))
                    {
                        <div class="detail-row">
                            <span class="detail-label">Test Name</span>
                            <span class="detail-value">@Model.TestName</span>
                        </div>
                    }

                    <div class="detail-row">
                        <span class="detail-label">Status</span>
                        <span class="status-badge @Model.AlertClass">
                            <i class="fas fa-circle" style="font-size: 0.5rem;"></i>
                            @Model.Reason.ToString().Replace("_", " ")
                        </span>
                    </div>

                    @foreach (var info in Model.AdditionalInfo)
                    {
                        <div class="detail-row">
                            <span class="detail-label">@info.Key</span>
                            <span class="detail-value">@info.Value</span>
                        </div>
                    }

                    <div class="detail-row">
                        <span class="detail-label">Date</span>
                        <span class="detail-value utc-time" data-utc="@DateTime.UtcNow.ToString("o")">@DateTime.Now.ToString("MMMM dd, yyyy 'at' HH:mm")</span>
                    </div>
                </div>
            }

            <!-- Actions -->
            <div class="denial-actions">
                @if (Model.ShowRetryButton && !string.IsNullOrEmpty(Model.RetryUrl))
                {
                    <a href="@Model.RetryUrl" class="btn btn-primary">
                        <i class="fas fa-redo"></i>
                        Try Again
                    </a>
                }

                <a href="/" class="btn btn-secondary">
                    <i class="fas fa-home"></i>
                    Return to Home
                </a>
            </div>
        </div>

        <!-- Footer -->
        @if (Model.ShowContactSupport)
        {
            <div class="denial-footer">
                <p class="footer-text">
                    Need help? 
                    <a href="mailto:support@testplatform.com" class="support-link">Contact Support</a>
                    or visit our 
                    <a href="/help" class="support-link">Help Center</a>
                </p>
            </div>
        }
    </div>
</div>